// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v4.0.0
// source: solar-system/protos/solar-system.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SolarSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bodies []*Body `protobuf:"bytes,1,rep,name=bodies,proto3" json:"bodies,omitempty"`
}

func (x *SolarSystem) Reset() {
	*x = SolarSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_solar_system_protos_solar_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolarSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolarSystem) ProtoMessage() {}

func (x *SolarSystem) ProtoReflect() protoreflect.Message {
	mi := &file_solar_system_protos_solar_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolarSystem.ProtoReflect.Descriptor instead.
func (*SolarSystem) Descriptor() ([]byte, []int) {
	return file_solar_system_protos_solar_system_proto_rawDescGZIP(), []int{0}
}

func (x *SolarSystem) GetBodies() []*Body {
	if x != nil {
		return x.Bodies
	}
	return nil
}

type Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsPlanet bool    `protobuf:"varint,2,opt,name=isPlanet,proto3" json:"isPlanet,omitempty"`
	Planet   *Planet `protobuf:"bytes,3,opt,name=planet,proto3" json:"planet,omitempty"`
}

func (x *Body) Reset() {
	*x = Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_solar_system_protos_solar_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_solar_system_protos_solar_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_solar_system_protos_solar_system_proto_rawDescGZIP(), []int{1}
}

func (x *Body) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Body) GetIsPlanet() bool {
	if x != nil {
		return x.IsPlanet
	}
	return false
}

func (x *Body) GetPlanet() *Planet {
	if x != nil {
		return x.Planet
	}
	return nil
}

type Planet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Moons []*Moon `protobuf:"bytes,2,rep,name=moons,proto3" json:"moons,omitempty"`
}

func (x *Planet) Reset() {
	*x = Planet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_solar_system_protos_solar_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Planet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Planet) ProtoMessage() {}

func (x *Planet) ProtoReflect() protoreflect.Message {
	mi := &file_solar_system_protos_solar_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Planet.ProtoReflect.Descriptor instead.
func (*Planet) Descriptor() ([]byte, []int) {
	return file_solar_system_protos_solar_system_proto_rawDescGZIP(), []int{2}
}

func (x *Planet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Planet) GetMoons() []*Moon {
	if x != nil {
		return x.Moons
	}
	return nil
}

type Moon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Moon) Reset() {
	*x = Moon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_solar_system_protos_solar_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Moon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Moon) ProtoMessage() {}

func (x *Moon) ProtoReflect() protoreflect.Message {
	mi := &file_solar_system_protos_solar_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Moon.ProtoReflect.Descriptor instead.
func (*Moon) Descriptor() ([]byte, []int) {
	return file_solar_system_protos_solar_system_proto_rawDescGZIP(), []int{3}
}

func (x *Moon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SolarSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SolarSystemRequest) Reset() {
	*x = SolarSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_solar_system_protos_solar_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolarSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolarSystemRequest) ProtoMessage() {}

func (x *SolarSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solar_system_protos_solar_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolarSystemRequest.ProtoReflect.Descriptor instead.
func (*SolarSystemRequest) Descriptor() ([]byte, []int) {
	return file_solar_system_protos_solar_system_proto_rawDescGZIP(), []int{4}
}

func (x *SolarSystemRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type SolarSystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SolarSystemResponse) Reset() {
	*x = SolarSystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_solar_system_protos_solar_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolarSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolarSystemResponse) ProtoMessage() {}

func (x *SolarSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_solar_system_protos_solar_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolarSystemResponse.ProtoReflect.Descriptor instead.
func (*SolarSystemResponse) Descriptor() ([]byte, []int) {
	return file_solar_system_protos_solar_system_proto_rawDescGZIP(), []int{5}
}

func (x *SolarSystemResponse) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_solar_system_protos_solar_system_proto protoreflect.FileDescriptor

var file_solar_system_protos_solar_system_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x2d, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x38, 0x0a, 0x0b, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x29, 0x0a, 0x06, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x06, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x22,
	0x63, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6d, 0x6f, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x4d, 0x6f, 0x6f, 0x6e, 0x52, 0x05, 0x6d, 0x6f, 0x6f, 0x6e, 0x73, 0x22, 0x1a, 0x0a, 0x04, 0x4d,
	0x6f, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x6f, 0x6c, 0x61, 0x72,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x3c, 0x0a, 0x13, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x32,
	0x68, 0x0a, 0x12, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x73, 0x6f, 0x6c,
	0x61, 0x72, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_solar_system_protos_solar_system_proto_rawDescOnce sync.Once
	file_solar_system_protos_solar_system_proto_rawDescData = file_solar_system_protos_solar_system_proto_rawDesc
)

func file_solar_system_protos_solar_system_proto_rawDescGZIP() []byte {
	file_solar_system_protos_solar_system_proto_rawDescOnce.Do(func() {
		file_solar_system_protos_solar_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_solar_system_protos_solar_system_proto_rawDescData)
	})
	return file_solar_system_protos_solar_system_proto_rawDescData
}

var file_solar_system_protos_solar_system_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_solar_system_protos_solar_system_proto_goTypes = []interface{}{
	(*SolarSystem)(nil),         // 0: solarsystem.SolarSystem
	(*Body)(nil),                // 1: solarsystem.Body
	(*Planet)(nil),              // 2: solarsystem.Planet
	(*Moon)(nil),                // 3: solarsystem.Moon
	(*SolarSystemRequest)(nil),  // 4: solarsystem.SolarSystemRequest
	(*SolarSystemResponse)(nil), // 5: solarsystem.SolarSystemResponse
}
var file_solar_system_protos_solar_system_proto_depIdxs = []int32{
	1, // 0: solarsystem.SolarSystem.bodies:type_name -> solarsystem.Body
	2, // 1: solarsystem.Body.planet:type_name -> solarsystem.Planet
	3, // 2: solarsystem.Planet.moons:type_name -> solarsystem.Moon
	1, // 3: solarsystem.SolarSystemResponse.body:type_name -> solarsystem.Body
	4, // 4: solarsystem.SolarSystemService.SolarSystem:input_type -> solarsystem.SolarSystemRequest
	5, // 5: solarsystem.SolarSystemService.SolarSystem:output_type -> solarsystem.SolarSystemResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_solar_system_protos_solar_system_proto_init() }
func file_solar_system_protos_solar_system_proto_init() {
	if File_solar_system_protos_solar_system_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_solar_system_protos_solar_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolarSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_solar_system_protos_solar_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_solar_system_protos_solar_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Planet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_solar_system_protos_solar_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Moon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_solar_system_protos_solar_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolarSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_solar_system_protos_solar_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolarSystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_solar_system_protos_solar_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_solar_system_protos_solar_system_proto_goTypes,
		DependencyIndexes: file_solar_system_protos_solar_system_proto_depIdxs,
		MessageInfos:      file_solar_system_protos_solar_system_proto_msgTypes,
	}.Build()
	File_solar_system_protos_solar_system_proto = out.File
	file_solar_system_protos_solar_system_proto_rawDesc = nil
	file_solar_system_protos_solar_system_proto_goTypes = nil
	file_solar_system_protos_solar_system_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SolarSystemServiceClient is the client API for SolarSystemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SolarSystemServiceClient interface {
	SolarSystem(ctx context.Context, in *SolarSystemRequest, opts ...grpc.CallOption) (*SolarSystemResponse, error)
}

type solarSystemServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSolarSystemServiceClient(cc grpc.ClientConnInterface) SolarSystemServiceClient {
	return &solarSystemServiceClient{cc}
}

func (c *solarSystemServiceClient) SolarSystem(ctx context.Context, in *SolarSystemRequest, opts ...grpc.CallOption) (*SolarSystemResponse, error) {
	out := new(SolarSystemResponse)
	err := c.cc.Invoke(ctx, "/solarsystem.SolarSystemService/SolarSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SolarSystemServiceServer is the server API for SolarSystemService service.
type SolarSystemServiceServer interface {
	SolarSystem(context.Context, *SolarSystemRequest) (*SolarSystemResponse, error)
}

// UnimplementedSolarSystemServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSolarSystemServiceServer struct {
}

func (*UnimplementedSolarSystemServiceServer) SolarSystem(context.Context, *SolarSystemRequest) (*SolarSystemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolarSystem not implemented")
}

func RegisterSolarSystemServiceServer(s *grpc.Server, srv SolarSystemServiceServer) {
	s.RegisterService(&_SolarSystemService_serviceDesc, srv)
}

func _SolarSystemService_SolarSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SolarSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SolarSystemServiceServer).SolarSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/solarsystem.SolarSystemService/SolarSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SolarSystemServiceServer).SolarSystem(ctx, req.(*SolarSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SolarSystemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "solarsystem.SolarSystemService",
	HandlerType: (*SolarSystemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SolarSystem",
			Handler:    _SolarSystemService_SolarSystem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "solar-system/protos/solar-system.proto",
}
